<?xml version="1.0"?>
<session version="1" name="MultiViewProcessor ReleaseN3B7.nvvp" hscale="3.794051649208246E-6">
<executable file="/home/avo/git/multiviewprocessor/MultiViewProcessor/Release/MultiViewProcessor" cwd="/home/avo/git/multiviewprocessor/MultiViewProcessor" args="" launchConfiguration="MultiViewProcessor Release" timeout="0" profileonstart="true" concurrentkernels="true"><envs></envs></executable>
<expert><columnprops><column kind="NAME" width="716"/><column kind="START_TIME" width="106"/></columnprops>
<columnorder><column kind="NAME"/><column kind="START_TIME"/><column kind="DURATION"/><column kind="AVG_DURATION"/><column kind="GRID_SIZE"/><column kind="BLOCK_SIZE"/><column kind="REGS_PER_THREAD"/><column kind="STAT_SHARED_MEM"/><column kind="DYNA_SHARED_MEM"/><column kind="AVG_DYNA_SHARED_MEM"/><column kind="BYTE_SIZE"/><column kind="THROUGHPUT"/><column kind="EMPTY"/></columnorder>
</expert>
<analysis activescope="KERNEL_INSTANCE"><visitedstages><stage name="TIMELINE"/></visitedstages></analysis>
<vruler width="200"/>
<hruler>
</hruler>
<timelinestate>
<timeline pathname="4886" kind="PROCESS" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="4886/-1421908160" kind="THREAD" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="4886/-1421908160/Runtime API" kind="RUNTIME" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="4886/-1421908160/Driver API" kind="DRIVER" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="4886/Profiling Overhead" kind="OVERHEADS" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680" kind="DEVICE" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1" kind="CONTEXT" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/MemCpy (HtoD)" kind="MEMCPY_HTOD" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/MemCpy (DtoH)" kind="MEMCPY_DTOH" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/MemCpy (DtoD)" kind="MEMCPY_DTOD" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute" kind="KERNELS" containerstate="CLOSED" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeSDPFH(device::SDPFHEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeDFPFH(device::DFPFHEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::estimateBestCorrespondences(device::CorrespondenceListEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeTransformationError(device::TransforamtionErrorEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/generate_seed_pseudo(__int64, __int64, __int64, curandOrdering, curandStateXORWOW*, unsigned int*)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::estimateNormalKernel(device::NormalEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::filterAtrousKernel(device::ATrousEnhancer128)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeDivDFPFH(device::DivDFPFHEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeBlockMeanDFPFH(device::MeanDFPFHBlockEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::for_each_n_closure&#60;thrust::device_ptr&#60;__int64&#62;, unsigned int, thrust::detail::device_generate_functor&#60;thrust::detail::fill_functor&#60;__int64&#62;&#62;&#62;&#62;(__int64)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::estimateTransformations(device::TransformationMatrixEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::loadSynthFrame(device::SynthWCLoader)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::unordered_reduce_closure&#60;thrust::transform_iterator&#60;threshold_stats_unary_op&#60;float&#62;, thrust::device_ptr&#60;float4&#62;, threshold_stats_data&#60;float&#62;, thrust::use_default&#62;, long, threshold_stats_data&#60;float&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;threshold_stats_data&#60;float&#62;&#62;&#62;, threshold_stats_binary_op&#60;float&#62;&#62;&#62;(float)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeCombinationErrorList(device::CombinationErrorListEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::updateCoords(device::CoordsUpdater)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computePersistanceDFPFHFeatures(device::PersistanceDFPFHEstimator)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeSigmaDFPFHBlock(device::SigmaDFPFHBlock)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeMeanDFPFH(device::MeanDFPFHEstimator&#60;unsigned int=512&#62;)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::filterTruncateThreshold(device::ThresholdFilter)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::for_each_n_closure&#60;thrust::zip_iterator&#60;thrust::tuple&#60;thrust::zip_iterator&#60;thrust::tuple&#60;thrust::device_ptr&#60;int&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;&#62;&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;th" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::estimateMinimumErrorTransformation(device::ErrorListMinimumPicker&#60;unsigned int=256&#62;)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::copy_if_intervals&#60;unsigned int=256, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;int&#62;&#62;, thrust::transform_iterator&#60;thrust::detail::predicate_to_integral&#60;thrust::detail::unary_negate&#60;thrust::detail::equal_to_value&#60;int&#62;&#62;, long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;int&#62;&#62;, long, thrust::use_default&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, thrust::detail::backend::uniform_decomposition&#60;long&#62;, thrust::device_ptr&#60;int&#62;&#62;(int, thrust::devic" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::unordered_reduce_closure&#60;thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;threshold_stats_data&#60;float&#62;&#62;&#62;, long, threshold_stats_data&#60;float&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;threshold_stats_data&#60;float&#62;&#62;&#62;, threshold_stats_binary_op&#60;float&#62;&#62;&#62;(float)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::copy_if_intervals&#60;unsigned int=256, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float, float, float, float, float, float, float&#62;&#62;&#62;, thrust::transform_iterator&#60;thrust::detail::predicate_to_integral&#60;thrust::detail::unary_negate&#60;device::is_not_valid_transform&#60;float&#62;&#62;, long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float, float, float, float, float, float, float&#62;&#62;&#62;, long, thrust::use_default&#62;" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::commutative_reduce_intervals_closure&#60;thrust::transform_iterator&#60;thrust::detail::predicate_to_integral&#60;thrust::detail::unary_negate&#60;thrust::detail::equal_to_value&#60;int&#62;&#62;, long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;int&#62;&#62;, long, thrust::use_default&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, thrust::plus&#60;long&#62;, thrust::detail::backend::uniform_decomposition&#60;long&#62;&#62;&#62;(int)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::SrtsScanSpine&#60;void&#62;(int*, thrust::detail::backend::cuda::detail::b40c_thrust::SrtsScanSpine&#60;void&#62;, int)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void gen_sequenced&#60;curandStateXORWOW, float, int, __operator_&#38;__(float curand_uniform_noargs&#60;curandStateXORWOW&#62;(curandStateXORWOW*, int))&#62;(curandStateXORWOW*, float*, unsigned long, unsigned long, int)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::commutative_reduce_intervals_closure&#60;thrust::transform_iterator&#60;thrust::detail::predicate_to_integral&#60;thrust::detail::unary_negate&#60;device::is_not_valid_transform&#60;float&#62;&#62;, long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float, float, float, float, float, float, float&#62;&#62;&#62;, long, thrust::use_default&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, thrust::plu" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::commutative_reduce_intervals_closure&#60;thrust::transform_iterator&#60;thrust::detail::predicate_to_integral&#60;thrust::detail::unary_negate&#60;device::is_not_valid_transform&#60;float&#62;&#62;, long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type&#62;&#62;&#62;, long, thrust::use_default&#62;" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::fast_scan::downsweep_intervals&#60;unsigned int=224, bool=1, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, long, thrust::plus&#60;long&#62;, thrust::detail::backend::uniform_decomposition&#60;unsigned int&#62;&#62;(long, thrust::device_ptr&#60;long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;*, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, long)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::copy_if_intervals&#60;unsigned int=256, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type&#62;&#62;&#62;, thrust::transform_iterator&#60;thrust::detail::predicate_to_integral&#60;thrust::detail::unary_negate&#60;device::is_not_valid_transform&#60;float&#62;&#62;, long&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float," kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::fast_scan::downsweep_intervals&#60;unsigned int=224, bool=1, long*, long*, long, thrust::plus&#60;long&#62;, thrust::detail::backend::uniform_decomposition&#60;unsigned int&#62;&#62;(long*, long*, long*, long, thrust::plus&#60;long&#62;)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=1, int=4, int=4, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=2, int=4, int=8, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=0, int=4, int=0, thrust::detail::backend::cuda::detail::b40c_thrust::PreprocessKeyFunctor&#60;float&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=5, int=4, int=20, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::for_each_n_closure&#60;thrust::zip_iterator&#60;thrust::tuple&#60;thrust::zip_iterator&#60;thrust::tuple&#60;thrust::device_ptr&#60;int&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::device_ptr&#60;float&#62;, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type&#62;&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;thrust::tuple&#60;int, float, float, float, thrust::nu" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=3, int=4, int=12, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=4, int=4, int=16, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=6, int=4, int=24, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::commutative_reduce_intervals_closure&#60;thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, thrust::detail::normal_iterator&#60;thrust::device_ptr&#60;long&#62;&#62;, thrust::plus&#60;long&#62;, thrust::detail::backend::uniform_decomposition&#60;unsigned int&#62;&#62;&#62;(long)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeSigmaDFPFH(device::SigmaDFPFH&#60;unsigned int=512&#62;)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::ScanScatterDigits&#60;unsigned int, unsigned int, int=7, int=4, int=28, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;, thrust::detail::backend::cuda::detail::b40c_thrust::PostprocessKeyFunctor&#60;float&#62;&#62;(bool*, int*, unsigned int*, unsigned int, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=0, int=4, int=0, thrust::detail::backend::cuda::detail::b40c_thrust::PreprocessKeyFunctor&#60;float&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=1, int=4, int=4, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=7, int=4, int=28, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=2, int=4, int=8, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=3, int=4, int=12, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=5, int=4, int=20, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=4, int=4, int=16, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::b40c_thrust::RakingReduction&#60;unsigned int, unsigned int, int=6, int=4, int=24, thrust::detail::backend::cuda::detail::b40c_thrust::NopFunctor&#60;unsigned int&#62;&#62;(bool*, int*, unsigned int*, unsigned int, thrust::detail::backend::cuda::detail::b40c_thrust::CtaDecomposition)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computeErrorListSum(device::ErrorListSumCalculator&#60;unsigned int=256&#62;)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/memset (0)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::computePersistanceMapLength(device::PersistanceMapLength)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/device::copyFinalTransformations(device::TransformationMatrixFinalCopyKernel)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::for_each_n_closure&#60;thrust::device_ptr&#60;float&#62;, unsigned int, thrust::detail::device_generate_functor&#60;thrust::detail::fill_functor&#60;float&#62;&#62;&#62;&#62;(float)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Compute/void thrust::detail::backend::cuda::detail::launch_closure_by_value&#60;thrust::detail::backend::cuda::for_each_n_closure&#60;thrust::device_ptr&#60;unsigned int&#62;, unsigned int, thrust::detail::device_generate_functor&#60;thrust::detail::fill_functor&#60;unsigned int&#62;&#62;&#62;&#62;(unsigned int)" kind="KERNEL" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Streams" kind="STREAMS" containerstate="OPEN_ALL" filtered="false"/>
<timeline pathname="GeForce GTX 680/1/Streams/2" kind="STREAM" containerstate="OPEN_ALL" filtered="false"/>
</timelinestate>
<pdm>
</pdm>
</session>
